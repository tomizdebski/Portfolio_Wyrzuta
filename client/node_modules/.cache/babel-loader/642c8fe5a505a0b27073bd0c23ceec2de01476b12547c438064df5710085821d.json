{"ast":null,"code":"var _jsxFileName = \"/home/tomasz/Desktop/Portfolio_MERN_Dev_Mentors/client/src/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { UserContext } from \"../UserContext\";\nimport './Login.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const {\n    setUserInfo\n  } = useContext(UserContext);\n  async function login(ev) {\n    ev.preventDefault();\n    //     const response = await fetch('http://localhost:4000/login', {\n    //       method: 'POST',\n    //       body: JSON.stringify({username, password}),\n    //       headers: {'Content-Type':'application/json'},\n    //       credentials: 'include',\n    //     });\n    //     if (response.ok) {\n    //       response.json().then(userInfo => {\n    //         setUserInfo(userInfo);\n    //         setRedirect(true);\n    //       });\n    //     } else {\n    //       alert('wrong credentials');\n    //     }\n    //   }\n\n    //   if (redirect) {\n    //     return <Navigate to={'/'} />\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login\",\n    onSubmit: login,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"login__item\",\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: ev => setUsername(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"login__item\",\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: ev => setPassword(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"login__item\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"3VespTTJBo/yuHyCEqvZYWrum8M=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useContext","useState","Navigate","UserContext","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","redirect","setRedirect","setUserInfo","login","ev","preventDefault","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/tomasz/Desktop/Portfolio_MERN_Dev_Mentors/client/src/components/Login.jsx"],"sourcesContent":["import {useContext, useState} from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {UserContext} from \"../UserContext\";\nimport './Login.scss'\n\nexport default function Login() {\n  const [username,setUsername] = useState('');\n  const [password,setPassword] = useState('');\n  const [redirect,setRedirect] = useState(false);\n  const {setUserInfo} = useContext(UserContext);\n  \n  async function login(ev) {\n    ev.preventDefault();\n//     const response = await fetch('http://localhost:4000/login', {\n//       method: 'POST',\n//       body: JSON.stringify({username, password}),\n//       headers: {'Content-Type':'application/json'},\n//       credentials: 'include',\n//     });\n//     if (response.ok) {\n//       response.json().then(userInfo => {\n//         setUserInfo(userInfo);\n//         setRedirect(true);\n//       });\n//     } else {\n//       alert('wrong credentials');\n//     }\n//   }\n\n//   if (redirect) {\n//     return <Navigate to={'/'} />\n  }\n  return (\n    <form className=\"login\" onSubmit={login}>\n      <h1>Login</h1>\n      <input  className=\"login__item\" type=\"text\"\n             placeholder=\"username\"\n             value={username}\n             onChange={ev => setUsername(ev.target.value)}/>\n      <input  className=\"login__item\" type=\"password\"\n             placeholder=\"password\"\n             value={password}\n             onChange={ev => setPassword(ev.target.value)}/>\n      <button className=\"login__item\" >Login</button>\n    </form>\n  )\n  }"],"mappings":";;AAAA,SAAQA,UAAU,EAAEC,QAAQ,QAAO,OAAO;AAC1C,SAAQC,QAAQ,QAAO,kBAAkB;AACzC,SAAQC,WAAW,QAAO,gBAAgB;AAC1C,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACS,QAAQ,EAACC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACW,QAAQ,EAACC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC9C,MAAM;IAACa;EAAW,CAAC,GAAGd,UAAU,CAACG,WAAW,CAAC;EAE7C,eAAeY,KAAKA,CAACC,EAAE,EAAE;IACvBA,EAAE,CAACC,cAAc,CAAC,CAAC;IACvB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;EACE;;EACA,oBACEZ,OAAA;IAAMa,SAAS,EAAC,OAAO;IAACC,QAAQ,EAAEJ,KAAM;IAAAK,QAAA,gBACtCf,OAAA;MAAAe,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdnB,OAAA;MAAQa,SAAS,EAAC,aAAa;MAACO,IAAI,EAAC,MAAM;MACpCC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEnB,QAAS;MAChBoB,QAAQ,EAAEZ,EAAE,IAAIP,WAAW,CAACO,EAAE,CAACa,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtDnB,OAAA;MAAQa,SAAS,EAAC,aAAa;MAACO,IAAI,EAAC,UAAU;MACxCC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEjB,QAAS;MAChBkB,QAAQ,EAAEZ,EAAE,IAAIL,WAAW,CAACK,EAAE,CAACa,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtDnB,OAAA;MAAQa,SAAS,EAAC,aAAa;MAAAE,QAAA,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAET;AAACjB,EAAA,CAzCqBD,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}